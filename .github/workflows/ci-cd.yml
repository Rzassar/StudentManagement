name: CI/CD Pipeline

on:
 push:
   branches:
     - main

jobs:
 changes:
   runs-on: ubuntu-latest
   outputs:
     backend: ${{ steps.filter.outputs.backend }}
     frontend: ${{ steps.filter.outputs.frontend }}
   steps:
   - uses: actions/checkout@v3
   - uses: dorny/paths-filter@v2
     id: filter
     with:
       filters: |
         backend:
           - 'SourceCode/Backend/**'
         frontend:
           - 'SourceCode/Frontend/**'

 backend:
   needs: changes
   if: ${{ needs.changes.outputs.backend == 'true' }}
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v3
   
   - name: Setup .NET
     uses: actions/setup-dotnet@v3
     with:
       dotnet-version: '8.0.x'
   
   - name: Restore dependencies
     run: dotnet restore ./SourceCode/Backend/StudentManagement.sln
   
   - name: Build
     run: dotnet build ./SourceCode/Backend/StudentManagement.sln --no-restore --configuration Release
   
   - name: Test
     run: dotnet test ./SourceCode/Backend/StudentManagement.sln --no-build --configuration Release

   - name: Login to Docker Hub
     uses: docker/login-action@v2
     with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

   - name: Build and push Docker image
     run: |
       docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/student-management-api:latest ./SourceCode/Backend/
       docker push ${{ secrets.DOCKERHUB_USERNAME }}/student-management-api:latest
   - name: Build Docker Image
     run: docker build -t student-management-api ./SourceCode/Backend/

 frontend:
   needs: changes
   if: ${{ needs.changes.outputs.frontend == 'true' }}
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v3
   
   - name: Setup Node.js
     uses: actions/setup-node@v3
     with:
       node-version: '20.x'
       
   - name: Install Dependencies
     working-directory: SourceCode/Frontend
     run: npm install
     
   - name: Build
     working-directory: SourceCode/Frontend
     run: npm run build
     
   - name: Login to Docker Hub
     uses: docker/login-action@v2
     with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}

   - name: Build and push Docker image
     working-directory: SourceCode/Frontend
     run: |
       docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/student-management-frontend:latest .
       docker push ${{ secrets.DOCKERHUB_USERNAME }}/student-management-frontend:latest